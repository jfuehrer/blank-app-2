import pandas as pd

def load_data(file_path):
    return pd.read_csv(file_path)

def get_foreign_labor_score(percentage):
    if percentage == 0:
        return 10
    elif 1 <= percentage <= 10:
        return 8
    elif 11 <+ percentage <+ 20:
        return 6
    elif 21 <= percentage <= 50:
        return 4
    else:
        return 2
    
def get_country_risk_multiplier(country):
    low_risk_countries = ['Canada', 'Germany', 'France', 'United Kingdom']
    moderate_risk_countries = ['India', 'Brazil', 'South Korea']
    high_risk_countries = ['Russia', 'China', 'Iran', 'North Korea']

    if country in low_risk_countries:
        return 1.0
    elif country in moderate_risk_countries:
        return 0.8
    elif country in high_risk_countries:
        return 0.6
    else:
        return 0.8 #default to moderate risk
    
def calculate_job_sensitivity_score(low, moderate, high):
    total_jobs = low + moderate + high
    if total_jobs == 0:
        return 10 # no foreign labor means low risk for jobs
    
    weighted_score = ((low * 10) + (moderate * 6) + (high * 2)) / total_jobs
    return weighted_score

def get_visa_category_score(category, count):
    if category == 'certified':
        if count <= 10:
            return 10
        elif count <= 20:
            return 8
        elif count <= 50:
            return 6
        else:
            return 4
        
    elif category in ['denied', 'withdrawn', 'unspecified']:
        if count <= 10:
            return 6
        elif count <= 20:
            return 2
        else:
            return 1
    else:
        return 6 # default for other categories
    
def calculate_visa_data_score(visa_counts):
    total_count=sum(visa_counts.values())
    if total_count == 0:
        return 10 # no visa data means minimal risk
    
    score_sum = sum(count * get_visa_category_score(category, count) * 0.10 for category, count in visa_counts.items())
    return score_sum / total_count

def get_visa_trend_adjustment(trend_data):
    if trend_data['denied_withdrawn_trend'] == 'downward' or trend_data['certified_trend'] == 'upward':
        return 10
    elif trend_data['certified_trend'] == 'downward' or trend_data['denied_withdrawn_trend'] == 'upward':
        return 2
    elif trend_data['certified_trend'] == 'stable' and trend_data['denied_withdrawn_trend'] == 'stable':
        return 6
    else:
        return 6 # default to stable trend if no data
    
def calculate_permanent_visa_score(visa_counts, trend_data):
    visa_data_score = calculate_visa_data_score(visa_counts)
    trend_adjustment = get_visa_trend_adjustment(trend_data)
    return (visa_data_score * 0.10) + (trend_adjustment * 0.10)

def calculate_final_score(row):
    foreign_labor_score = get_foreign_labor_score(row['foreign_labor_percentage'])
    country_multiplier = get_country_risk_multiplier(row['country'])
    adjusted_foreign_labor_score = foreign_labor_score * country_multiplier

    job_sensitivity_score = calculate_job_sensitivity_score(
        row['job_counts_low'], row['job_counts_moderate'], row['job_counts_high']
    )

    final_score = (
        (adjusted_foreign_labor_score * 0.4) +
        (job_sensitivity_score * 0.3)
    )
    return final_score

def calculate_foreign_labor_risk_score(h1b_score, permanent_visa_score):
    return h1b_score + permanent_visa_score

def interpret_risk_score(score):
    if 9.0 <= score <= 10.0:
        return "Low Risk", "Vendor has minimal reliance on foreign labor, low-risk roles, and favorable historical trend"
    elif 7.0 <= score < 9.0:
        return "Moderate Risk", "Vendor uses some foreign labor for low to moderately sensitive roles but demostrates reasonable controls."
    else:
        return "High Risk", "Vendor heavily relies on foreign labor, high-risk roles, or exhibits increasing dependence on H1-B."

def main():
    file_path = input("Enter the CSV file path: ")
    data = load_data(file_path)
    
    # calculate scores for each row
    data['final_score'] = data.apply(calculate_final_score, axis=1)

    # calculate permanent visa score assuming visa data and trend columns are provided
    data['permanent_visa_score'] = data.apply(
        lambda row: calculate_permanent_visa_score(
            {
                'certified': row['visa_certified_count'],
                'denied': row['visa_denied_count'],
                'withdrawn': row['visa_withdrawn_count'],
                'certified_expired': row['visa_certified_expired_count'],
                'unspecified': row['visa_unspecified_count']            
            }
        ), axis=1  
    )

    #calculate foreign labor risk score and interpretation
    data['foreign_labor_risk_score'] = data.apply(lambda row: calculate_foreign_labor_risk_score(row['final_score'], row['permanent_visa_score']), axis=1)
    data[['risk_category', 'interpretation']] = data['foreign_labor_risk_score'].apply(lambda score: pd.Series(interpret_risk_score(score)))

    output_file = "vendor_risk_scores_with_interpretation.csv"
    data.to.csv(output_file, index=False)
    print(f"Risk scores calculated and saved to {output_file}")

if __name__ == "__main__":
    main()
